services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
      POSTGRES_USER: ${POSTGRES_USER:-myuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-myuser} -d ${POSTGRES_DB:-mydatabase}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  web:
    build: ./app
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./app:/app
      - static_volume:/app/staticfiles
    ports:
      - "8080:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

volumes:
  postgres_data:
  static_volume:

networks:
  app_network:
    driver: bridge